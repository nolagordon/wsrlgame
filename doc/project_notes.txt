Feature ideas:
1. persistence
2. map
3. avatar/player character
4. motion
5. monsters/companions
hit pts/ other statistics
permadeath
ailments? status ailments? including hunger
6. combat
7. currency
inventory
8. items
9. stores
progression of difficulty/level
story

TODO:
  1. More checks for game persistence (i.e. don't want player to try to resume
  a game if they don't have one currently)


Notes about multiple floors:
  Right now, my idea is to add stairs to each floor in some random location, then generate a new
floor each time the player ascends/descends stairs. The player will be placed in a random location
after changing floors. There should be some extra field that will store the floor that the player is
on. Enemies can be generated based on which floor the player occupies. The player can press enter
to interact with a staircase.
  Current bugs: sometimes it seems that the stairs generates in an unreachable position. I'm not sure
whether this can be fixed by using another map generation algorithm. Also for some reason the FoV stuff
shuts off whenever the avatar walks onto the staircase.

Right now, we support multiple floor levels, but there's a chance that the player may get stuck
on a level with no reachable staircase. The player wins the game when they reach floor one.
the player can only descend stairs, and can't ascend stairs.

To fix the issue where the stairs may not be reachable from the player, I changed the stair
placement technique to take 100 steps starting from the player's position and then place the
stairs wherever we end up. However, this seems to usually place the stairs very close to the
player's starting position. Maybe there's a better way to place the stairs (i.e. favor taking
a step that makes the stairs farther away from the player or increasing the number of steps
the algorithm uses).

CONCERN: Do we need to delete the entities on the map before we switch floors? Will there be any adverse
affects on our game if we don't?

Notes about currency/shops:
- currency handled through entity mixins - MoneyHolder and MoneyDropper
- added shopkeeper entity mixin
- shop opens as an itemListing layer (such as layers to pickup/eat/drop items)
- In order to deal with prices, I think I'll add a map to the shopkeeper mixin that maps
  items to their prices
